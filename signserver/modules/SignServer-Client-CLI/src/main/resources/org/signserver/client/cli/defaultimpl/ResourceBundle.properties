##########################################################################
#                                                                        #
#  SignServer: The OpenSource Automated Signing Server                   #
#                                                                        #
#  This software is free software; you can redistribute it and/or        #
#  modify it under the terms of the GNU Lesser General Public            #
#  License as published by the Free Software Foundation; either          #
#  version 2.1 of the License, or any later version.                     #
#                                                                        #
#  See terms of license at gnu.org.                                      #
#                                                                        #
##########################################################################
#
# $Id$
#

WORKERID_DESCRIPTION=ID of worker which should perform the operation.
WORKERNAME_DESCRIPTION=Name of worker which should perform the operation.
UNEXPECTED\ PARSING\ EXCEPTION\:\ =Unexpected parsing exception:
PORT_DESCRIPTION=Server port. Default: 8080 (for HTTP), 8442 for HTTPS and 8443 for HTTPS with client authentication.
HOST_DESCRIPTION=Server name or IP address. Default: localhost
SERVLET_DESCRIPTION=Servlet to call. Default /signserver/process
SERVLET_SOD_DESCRIPTION=Servlet to call. Default /signserver/sod
ENCODING_DESCRIPTION=Encoding of the data option. None or base64. Default: none.
OUTFILE_DESCRIPTION=File to write the result to. If not specified the result is written to stdout.
INFILE_DESCRIPTION=File to read data to send to the worker from.
DATA_DESCRIPTION=Data to send to the worker.
FILE_NOT_FOUND\:=File not found: {0}
PROTOCOL_DESCRIPTION=Method of interacting with SignServer. HTTP, CLIENTWS or WEBSERVICES. Default: HTTP.
PROTOCOL_DESCRIPTION_VALIDATE=Method of interaction with SignServer. WEBSERVICES, or HTTP. Default: WEBSERVICES.
PROTOCOL_SOD_DESCRIPTION=Method of interacting with SignServer. HTTP or CLIENTWS. Default: HTTP.
TRUSTSTORE_DESCRIPTION=Keystore with trusted certificates to use with HTTPS.
TRUSTSTOREPWD_DESCRIPTION=Password for the keystore with trusted certificates. If truststore is specified but not this truststore password option, the CLI will instead prompt for the password.
KEYSTORE_DESCRIPTION=Keystore with private key and certificate for client certificate authentication.
KEYSTOREPWD_DESCRIPTION=Password for reading the keystore.  If keystore is specified but not this keystore password option, the CLI will instead prompt for the password.
KEYALIAS_DESCRIPTION=Alias of the key in the keystore to use for authentication.
USERNAME_DESCRIPTION=Username for authentication.
PASSWORD_DESCRIPTION=Password for authentication. If username is specified but not this password option, the CLI will instead prompt for the password.
REPEAT_DESCRIPTION=Run the operation this number of times. Default: 1
PDFPASSWORD_DESCRIPTION=Password for changing the PDF (if required).
METADATA_DESCRIPTION=Additional meta data to send to the signer. The parameters should be given in the form KEY=VALUE. This option can be given multiple times.
INDIR_DESCRIPTION=Directory to read input files from. Required if outdir specified. Can not be combined with infile or outfile.
OUTDIR_DESCRIPTION=Directory to write output files to. Required if indir specified. Can not be combined with infile or outfile.
THREADS_DESCRIPTION=Number of threads for sending the requests. Only allowed in batch mode, ie when indir and outdir are specified. Default: 1.
REMOVEFROMINDIR_DESCRIPTION=Specify this flag to have the successfully processed input files removed from indir.
ONEFIRST_DESCRIPTION=In batch mode, don't send all requests until the first succeeds. This is primary to prevent too many incorrect password attempts. Default if username is provided and -startall not provided.
STARTALL_DESCRIPTION=In batch mode, send all requests at once, without waiting for the first to succeed. Default unless username is provided or -onefirst provided.
CLIENTSIDE_DESCRIPTION=Hash the file(s) locally, sign the hash server-side, and assemble the resulting file(s) locally.
DIGESTALGORITHM_DESCRIPTION=Digest algorithm to use for client-side hashing and contruction (using the -clientside option).
FILETYPE_DESCRIPTION=Overrides automatic filetype dection for client-side hashing and construction (possible values PE, MSI, ZIP), default: try to guess based on input.