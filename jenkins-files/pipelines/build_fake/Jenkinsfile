node('dss-docker-slave') {

    checkout([$class: 'SubversionSCM', additionalCredentials: [], excludedCommitMessages: '', excludedRegions: '', excludedRevprop: '', excludedUsers: '', filterChangelog: false, ignoreDirPropChanges: false, includedRegions: '', locations: [[cancelProcessOnExternalsFail: true, credentialsId: 'e8aa0eb0-9eb8-42d2-8596-6a7a90c8f7cc', depthOption: 'infinity', ignoreExternalsOption: true, local: '.', remote: 'https://svn.cesecore.eu/svn/signserver-restricted/trunk']], quietOperation: true, workspaceUpdater: [$class: 'UpdateUpdater']])

        stage('Verify Environment') {
                // Print versions
                sh "java -version"
                sh "mvn -version"
                sh "ant -version"
                sh "locale"
                sh "echo Workspace: ${WORKSPACE}"
                sh "printenv"
                sh "ls -l"

                // Init edition
                /*dir ('signserver') {
                    sh "ant -q init"

                    // Check expected edition
                    // TODO
                }*/
        }
        stage('Copy Release File') {
                sh ('cp /home/jenkins/binaries/signserver-ee-5.0.0.Alpha1-SNAPSHOT-bin.zip .')
                sh ('ls -l')
        }
//        stage('Unit Test') {
//            steps {
//                dir ('signserver') {
//                    withEnv(['SIGNSERVER_NODEID=node1.example.com']) {                     
//                        sh "mvn -Dmaven.repo.local=${WORKSPACE}/m2-repo test"
//
//                        // gather the results
//                        junit "**/target/surefire-reports/*.xml"
//                    }
//                }
//            }
//        }
        stage('Package') {
                /*dir ('signserver') {
                    // Create the release
                    sh "ant release:binary-zip"
                }*/
                archiveArtifacts 'signserver-*-bin.zip'
        }
        /* stage('Javadoc') {
            steps {
                dir ('signserver') {
                    // Build Javadoc
                    sh "mvn -Dmaven.repo.local=${WORKSPACE}/m2-repo javadoc:aggregate"
                }
            }
        } */
        /*stage('Coverage') {
            steps {
                dir ('signserver') {
                    jacoco()
                }
            }
        }*/

    /*post {
        always {
            cleanWs()
        }
    }*/
}
